#include <stdio.h>

#define NUM_BLOCKS 10
#define BLOCK_SIZE 100
#define NUM_FILES 3

int index_block[NUM_BLOCKS];
int file1[NUM_BLOCKS][BLOCK_SIZE];
int file2[NUM_BLOCKS][BLOCK_SIZE];
int file3[NUM_BLOCKS][BLOCK_SIZE];

void readBlock(int file_num, int block) {
    if (file_num < 1 || file_num > NUM_FILES) {
        printf("Invalid file number.\n");
        return;
    }
    if (block < 0 || block >= NUM_BLOCKS) {
        printf("Invalid block number.\n");
        return;
    }

    int offset = index_block[block];
    if (file_num == 1) {
        fwrite(file1[offset], BLOCK_SIZE, 1, stdout);
    } else if (file_num == 2) {
        fwrite(file2[offset], BLOCK_SIZE, 1, stdout);
    } else if (file_num == 3) {
        fwrite(file3[offset], BLOCK_SIZE, 1, stdout);
    }
}

int main() {
    int i, j;

    // Initialize the index block with random data
    for (i = 0; i < NUM_BLOCKS; i++) {
        index_block[i] = i % NUM_FILES;
    }

    // Initialize the files with random data
    for (i = 0; i < NUM_FILES; i++) {
        for (j = 0; j < NUM_BLOCKS; j++) {
            int k;
            for (k = 0; k < BLOCK_SIZE; k++) {
                if (i == 1) {
                    file1[j][k] = 'a' + (j * BLOCK_SIZE + k) % 26;
                } else if (i == 2) {
                    file2[j][k] = 'a' + (j * BLOCK_SIZE + k) % 26;
                } else if (i == 3) {
                    file3[j][k] = 'a' + (j * BLOCK_SIZE + k) % 26;
                }
            }
        }
    }

    // Read blocks from the files
    readBlock(1, 3);
    printf("\n");
    readBlock(2, 7);
    printf("\n");
    readBlock(3, 1);
    printf("\n");

    return 0;
}
