#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/shm.h>
#include <string.h>

#define SHM_SIZE 2048

int main()
{
    int shmid;
    void *shared_memory;
    char *message;

    shmid = shmget((key_t)1234, SHM_SIZE, IPC_CREAT | 0666);
    if (shmid == -1) {
        perror("shmget");
        exit(1);
    }
    printf("Shared memory created with id: %d\n", shmid);

    shared_memory = shmat(shmid, NULL, 0);
    if (shared_memory == (void *)-1) {
        perror("shmat");
        exit(1);
    }
    printf("Shared memory attached at address: %p\n", shared_memory);

    message = (char *)shared_memory;
    strcpy(message, "Hello, shared memory!");
    printf("Parent process wrote: %s\n", message);

    int pid = fork();
    if (pid == 0) {
        // child process
        printf("Child process reading from shared memory:\n");
        printf("%s\n", message);
    } else if (pid > 0) {
        // parent process
        wait(NULL);
        shmdt(shared_memory);
        shmctl(shmid, IPC_RMID, NULL);
        printf("Parent process detached and removed shared memory.\n");
    } else {
        perror("fork");
        exit(1);
    }

    return 0;
}
